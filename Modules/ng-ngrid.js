angular.module("ngNgrid",["ui.bootstrap"]).directive("ngNgrid",function(n,t,r){function u(t){t.pageSizeOptions=[10,15,20,50,100,500,1e3];t.gridCurrentPage=1;t.gridChildrenSortOrder=!1;t.gridChildrenSortColumn="";t.customFilter=[];t.customFilter.ColumnFilters=[];t.filterSelectionList=[];t.distinctLists=[];t.setGridTableStyle=function(){var i=document.getElementById("ngGridToolbar").getBoundingClientRect().bottom,n=0;return n=t.gridHeightStretchBottomOffset!=null?t.gridHeightStretchBottomOffset:window.innerHeight-t.gridHeightFixed-document.getElementById("ngGridToolbar").getBoundingClientRect().top,{top:i+"px",bottom:n+"px"}};t.gridTotalPages=function(){return Math.ceil(t.rows.length/t.gridPageSize)};t.changeSort=function(n){t.gridSortOrder=!t.gridSortOrder;t.gridSortColumn=t.getSortProperty(n)};t.changeChildSort=function(n){t.gridChildrenSortOrder=!t.gridChildrenSortOrder;t.gridChildrenSortColumn=t.getSortProperty(n)};t.isSorted=function(n){return t.gridSortColumn==t.getSortProperty(n)};t.isChildSorted=function(n){return t.gridChildrenSortColumn==t.getSortProperty(n)};t.getSortProperty=function(n){return n.SortProperty!=null?n.Name+"."+n.SortProperty:n.Name};t.getValueFromPropertyString=function(n,t){var r=null,u,i;if(t!=null)for(u=t.split("."),i=0;i<u.length;i++)if(i==0)r=n[u[i]];else if(r==null)break;else r=r[u[i]];return r};t.getChildRows=function(n,i){return t.getValueFromPropertyString(n,i)};t.childRowsCount=function(n){for(var r,u=0,i=0;i<t.childPropertynames.length;i++)r=t.getValueFromPropertyString(n,t.childPropertynames[i]),u+=r?r.length:0;return u};t.getColValue=function(n,i){var r=null;return i[n.Name]!=null&&(r=n.SortProperty!=null?t.getValueFromPropertyString(i[n.Name],n.SortProperty):i[n.Name]),r};t.distinctChildColValues=function(n,r){var u=[],e=t.getSortProperty(n),f;for(i=0,len=r[t.childPropertynames].length;i<len;i++)f=t.getColValue(n,r[t.childPropertynames][i]),f!=null&&u.indexOf(f)==-1&&u.push(f);return u.sort(),u};t.distinctColValues=function(r,u){var f=[],e,h,o,s;for(i=0,len=u.length;i<len;i++)if(e=t.getColValue(r,u[i]),e!=null){for(h=!1,o=0;o<f.length;o++)if(f[o].DistinctValue==e){h=!0;f[o].DistinctCount+=1;break}h||(s=r.FilterTextFn?r.FilterTextFn({DistinctValue:e,DistinctCount:-1}):e,r.ColumnType=="ngNGridDate"&&(s=r.FilterDateFormatFn?n("date")(s,r.FilterDateFormatFn(null)):n("date")(s)),f.push({DistinctValue:e,DistinctCount:1,DisplayValue:s}))}return f.sort(function(n,t){return n.DistinctValue<t.DistinctValue?-1:n.DistinctValue>t.DistinctValue?1:0}),f};t.setDistinctColValuesFiltered=function(n){var i=t.getSortProperty(n),r=t.gridFilteredRows;r.length==t.rows.length||t.customFilter.ColumnFilters[i]!=null&&t.customFilter.ColumnFilters[i].IsFirstFilter?t.distinctLists[i]=t.distinctColValues(n,t.rows):t.isColNameFilterApplied(i)||(t.distinctLists[i]=t.distinctColValues(n,r))};t.toggleColFilters=function(n){var r=t.getSortProperty(n),u,i;if(t.isColNameFilterApplied(r))delete t.customFilter.ColumnFilters[r],t.gridFiltersChanged({filterColumnName:r,filters:[""],isAdded:!1});else{for(u=[],i=0;i<n.DropdownFilteredObjects.length;i++)t.addColumnFilters(n,[n.DropdownFilteredObjects[i].DistinctValue]),u.push(n.DropdownFilteredObjects[i].DistinctValue);t.gridFiltersChanged({filterColumnName:r,filters:u,isAdded:!0})}};t.$on("ngNGrid_FilterChange",function(n,i,r){t.addColumnFilters(i,r)});t.addColumnFilters=function(n,i){var f,u,s,h,c;if(i!=null){var r=t.getSortProperty(n),e=[],o=[];for(f=0;f<i.length;f++)if(u=i[f],u=u.toString().trim().toLowerCase(),s=!1,Object.keys(t.customFilter.ColumnFilters).length<=0&&(s=!0),t.customFilter.ColumnFilters[r]==null&&(t.customFilter.ColumnFilters[r]=[]),h=t.customFilter.ColumnFilters[r].indexOf(u),h==-1)t.customFilter.ColumnFilters[r].push(u),t.customFilter.ColumnFilters[r].IsFirstFilter||(t.customFilter.ColumnFilters[r].IsFirstFilter=s),e.push(u);else{if(t.customFilter.ColumnFilters[r].splice(h,1),t.customFilter.ColumnFilters[r].length==0){delete t.customFilter.ColumnFilters[r];for(c in t.customFilter.ColumnFilters)if(t.isColNameFilterApplied(c)){t.customFilter.ColumnFilters[c].IsFirstFilter=!0;break}}o.push(u)}e.length>0&&t.gridFiltersChanged({filterColumnName:r,filters:e,isAdded:!0});o.length>0&&t.gridFiltersChanged({filterColumnName:r,filters:o,isAdded:!1})}};t.isColFilterApplied=function(n){var i=t.getSortProperty(n);return t.isColNameFilterApplied(i)};t.isColNameFilterApplied=function(n){return t.customFilter.ColumnFilters[n]!=null};t.isColFiltered=function(n,i){if(t.customFilter.ColumnFilters==null||t.customFilter.ColumnFilters==[])return!1;if(i!=null){i=i.toString().toLowerCase();var r=t.getSortProperty(n);if(t.customFilter.ColumnFilters[r]!=null)return t.customFilter.ColumnFilters[r].indexOf(i)>-1}else return!1};t.clearAllFilters=function(){t.customFilter.ColumnFilters=[];t.gridFiltersChanged({filterColumnName:"",filters:[""],isAdded:!1})};t.anyFiltersExist=function(){if(t.customFilter.ColumnFilters==null||t.customFilter.ColumnFilters==[]||Object.keys(t.customFilter.ColumnFilters)<=0)return!1;for(var n in t.customFilter.ColumnFilters)if(t.customFilter.ColumnFilters[n]!=null)return!0;return!1};t.getStyle=function(){return t.gridHeightStretchBottomOffset!=null?{height:window.innerHeight-document.getElementById("ngGridToolbar").getBoundingClientRect().top-t.gridHeightStretchBottomOffset+"px",width:"100%"}:{height:t.gridHeightFixed+"px",width:"100%"}};t.canShowRecord=function(n){var u,r,e,o,f,i,s;if(t.customFilter!=null&&t.customFilter.ColumnFilters!=null&&Object.keys(t.customFilter.ColumnFilters).length>0){u=!0;for(r in t.customFilter.ColumnFilters){for(e=t.customFilter.ColumnFilters[r],o=!1,f=0;f<e.length;f++)if(i=null,r.indexOf(".")<=-1?i=n[r]:(s=r.split("."),i=n[s[0]][s[1]]),i=i.toString(),i.toLowerCase()==e[f]){o=!0;break}u=u&&o}return u}return!0};t.allRowsSelected=!1;t.toggleRowsSelect=function(){for(var n=0;n<t.rows.length;n++)t.rows[n].isNgNgridSelected=!t.allRowsSelected;t.allRowsSelected=!t.allRowsSelected};t.on_fileUpload=function(n){var f=!1,i=[],r,u;for(t.files=[],r=0;r<n.files.length;r++)u=new FileReader,u.readAsText(n.files[r]),u.onload=function(){for(var r,h,s,e=angular.fromJson(u.result),o=[],n=0;n<t.columnDefinitions.length;n++)t.columnDefinitions[n].Type=="Date"&&o.push(t.columnDefinitions[n].Name);for(r=0;r<e.length;r++){for(n=0;n<o.length;n++)e[r][o[n]]!=null&&(e[r][o[n]]=new Date(e[r][o[n]]));i.push(e[r])}h={Rows:i,CancelEvent:f};t.onDataImport({ngNgridImportObject:h});if(!h.CancelEvent){for(s=0;s<i.length;s++)t.rows.unshift(i[s]);t.$apply()}}};t.importFromJson=function(){var n=document.getElementById("fileUploadJson");n.click()};t.isAnyRowSelected=function(){for(var n=0;n<t.rows.length;n++)if(t.rows[n].isNgNgridSelected)return!0;return!1};t.exportSelectedToJson=function(){for(var r,u,i=[],n=0;n<t.rows.length;n++)t.rows[n].isNgNgridSelected&&i.push(t.rows[n]);r={Rows:i,CancelEvent:!1};t.onDataExport({ngNgridExportObject:r});r.CancelEvent||(u=new Blob([angular.toJson(i)]),window.navigator.msSaveBlob(u,"ngNGridExport.json"))};t.ondropDownToggle=function(n,i){n.isNgNgridDropdownOpen&&(t.setDistinctColValuesFiltered(n),r(function(){document.getElementById(i).focus()},100))};t.dropdownFilterKeyPress=function(n,i){n.keyCode==13&&(t.toggleColFilters(i),i.isNgNgridDropdownOpen=!1,n.preventDefault())};t.updateDateFilter=function(n,i,r){i!=null&&r!=null&&(r.setHours(23),r.setMinutes(59),r.setSeconds(59),t.updateRangeFilter(n,i,r,!1))};t.updateNumberFilter=function(n,i,r){t.updateRangeFilter(n,i,r,!0)};t.updateRangeFilter=function(n,i,r,u){var f,s;if(i!=null&&r!=null){var h=t.getSortProperty(n),e=t.distinctLists[h],o=[];for(f=0;f<e.length;f++)s=u?"DisplayValue":"DistinctValue",e[f][s]>=i&&e[f][s]<=r&&o.push(e[f].DistinctValue);o.length>0&&t.addColumnFilters(n,o)}}}return{restrict:"E",scope:{columnDefinitions:"=",childColumndefinitions:"=",childPropertynames:"=",rowFooterdefinitions:"=",rows:"=",rowsLoading:"=",rowsLoadingText:"@",gridPageSize:"=initialPagesize",gridSortColumn:"=initialSortcolumn",gridSortOrder:"=initialSortdesc",showRowNumbers:"=",showRowSelector:"=",gridHeightFixed:"=",gridHeightStretchBottomOffset:"=",gridFiltersChanged:"&",onDataImport:"&",onDataExport:"&"},templateUrl:"Templates/NgNgridTemplate.html",link:u}}).filter("ngNgridPageOffset",function(){return function(n,t){return n.slice(t)}}).run(function(n){n.put("Templates/NgNgridTemplate.html",'<!--/* * ng-ngrid * https://github.com/nikhilogic/ngNGrid  * Version: 1.0 * License: MIT */--> <div ng-style="getStyle()"> <nav id="ngGridToolbar" class="navbar-form navbar-default navbar-static-top" role="navigation"> <div class="container-fluid"> <div class="navbar-left"> <span class="btn-toolbar"> <span class="btn-group"> <label class="btn btn-default" btn-checkbox ng-model="hideSettings" data-toggle="tooltip" data-placement="right" title="Show/Hide Settings"> <span class="glyphicon glyphicon-cog"><\/span> <span ng-class="hideSettings?\'ngngrid-caret-left\':\'ngngrid-caret-right\'"><\/span> <\/label> <\/span> <span class="btn-group" ng-show="hideSettings"> <label class="btn btn-default" btn-checkbox ng-model="showRowNumbers" data-toggle="tooltip" data-placement="right" title="Show/Hide Row Numbers"> <span class="glyphicon" ng-class="showRowNumbers?\'glyphicon-check\':\'glyphicon-unchecked\'"><\/span> Row # <\/label> <label class="btn btn-default" btn-checkbox ng-model="showRowSelector" data-toggle="tooltip" data-placement="right" title="Show/Hide Row Selector"> <span class="glyphicon" ng-class="showRowSelector?\'glyphicon-check\':\'glyphicon-unchecked\'"><\/span> Selectable Rows <\/label> <label class="btn btn-default" btn-checkbox ng-model="showChildrenCount" data-toggle="tooltip" data-placement="right" title="Show/Hide Children Count"> <span class="glyphicon" ng-class="showChildrenCount?\'glyphicon-check\':\'glyphicon-unchecked\'"><\/span> Child Record Count <\/label> <\/span> <span class="btn-group" ng-show="hideSettings"> <label class="btn btn-danger" ng-click="clearAllFilters()" ng-disabled="!anyFiltersExist()" data-toggle="tooltip" data-placement="right" title="Clear All Filters"> Clear all <span class="glyphicon glyphicon-filter"><\/span> <\/label> <\/span> <span class="btn-group" ng-show="hideSettings"> <input id="fileUploadJson" class="form-control btn btn-default" type="file" accept=".json" onchange="angular.element(this).scope().on_fileUpload(this)" style="display:none" /> <label class="btn btn-primary" ng-click="importFromJson()" data-toggle="tooltip" data-placement="right" title="Import grid rows from json file"> Import <span class="glyphicon glyphicon-import"><\/span> <\/label> <label class="btn btn-primary" ng-disabled="!isAnyRowSelected()" ng-click="exportSelectedToJson()" data-toggle="tooltip" data-placement="right" title="Export selected rows to json file"> Export Selected <span class="glyphicon glyphicon-export"><\/span> <\/label> <\/span> <\/span> <\/div> <div class="navbar-right"> <span class="btn-group"> <label class="btn" onmouseover="" style="cursor:default"><b>{{gridCurrentPage}}-{{gridTotalPages()}}<\/b> of <b>{{rows.length}}<\/b><\/label> <span> <pagination class="pagination" onmouseover="" style="cursor: pointer;margin:0" boundary-links="true" total-items="rows.length" ng-model="gridCurrentPage" items-per-page="gridPageSize" previous-text="&lsaquo;" next-text="&rsaquo;" first-text="&laquo;" last-text="&raquo;" max-size="5" rotate=""><\/pagination> <\/span> <\/span> <span class="input-group" style="margin-top:-6px" data-toggle="tooltip" data-placement="right" title="Records per Page"> <span class="input-group-addon"> <span class=" glyphicon glyphicon-th-list"><\/span> <\/span> <select class="form-control" ng-model="gridPageSize" ng-options="number for number in pageSizeOptions"><\/select> <\/span> <\/div> <\/div> <\/nav> <div class="ngngrid-scroll" ng-style="setGridTableStyle()"> <table id="ngGridTable" class="table table-condensed table-bordered table-striped"> <tr> <th ng-if="childColumndefinitions.length > 0" class="bg-primary"><\/th> <th ng-show="showRowNumbers" class="bg-primary">#<\/th> <th ng-show="showRowSelector" ng-click="toggleRowsSelect()" style="cursor:pointer" data-toggle="tooltip" title="Select/Unselect All" class="bg-primary"> <span class="glyphicon" ng-class="allRowsSelected ? \'glyphicon-check\': \'glyphicon-unchecked\'"><\/span> <\/th> <th ng-repeat="c in columnDefinitions" ng-hide="c.isNgNgridColumnHide" class="bg-primary"> <span ng-click="changeSort(c)" style="cursor:pointer"> <u>{{c.DisplayName}}<\/u> <span ng-show="isSorted(c)" class="glyphicon" ng-class="gridSortOrder?\'glyphicon-chevron-down\':\'glyphicon-chevron-up\'"><\/span> <\/span> <\/th> <\/tr> <tr> <th ng-if="childColumndefinitions.length > 0"><\/th> <th ng-show="showRowNumbers"><\/th> <th ng-show="showRowSelector"><\/th> <th ng-repeat="c in columnDefinitions" ng-hide="c.isNgNgridColumnHide"> <div ng-hide="c.DisableFilter" class="input-group input-group-sm dropdown" dropdown auto-close="outsideClick" is-open="c.isNgNgridDropdownOpen" on-toggle="ondropDownToggle(c,\'ngNgridDropdownFilter\' + $index)"> <span class="input-group"> <input type="text" class="form-control" ng-model="dropDownFilterInput" ng-init="dropDownFilterInput=\'\'" ng-focus="c.isNgNgridDropdownOpen=true" id="ngNgridDropdownFilter{{$index}}" ng-keypress="dropdownFilterKeyPress($event,c)" style="display:inline" /> <span class="input-group-btn"> <button type="button" dropdown-toggle class="btn dropdown-toggle" ng-class="isColFilterApplied(c) ? \'btn-primary\':\'btn-default\'"> <span class="glyphicon glyphicon-filter"><\/span> <\/button> <\/span> <\/span> <ul class="dropdown-menu" ng-class="$index==columnDefinitions.length-1 ? \'dropdown-menu-right\' :\'\'" role="menu" style="overflow-y:auto;max-height:500px;width:auto;overflow-x:auto"> <li class="ngngrid-dropdown"><small class="text-muted">*Type & hit Enter to apply filters<\/small><\/li> <li class="divider"><\/li> <li class="ngngrid-dropdown" ng-if="c.ColumnType==\'ngNGridDate\'"> <span class="input-group" style="padding-bottom:5px"> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar text-muted"><\/span><\/span> <input type="date" class="form-control" datepicker-popup ng-model="ngNgridStartDate" is-open="datepickerstartopen" date-disabled="false" ng-required="true" close-text="Close" datepicker-append-to-body="true" ng-click="datepickerstartopen=true" placeholder="From" ng-change="updateDateFilter(c,ngNgridStartDate,ngNgridEndDate)" /> <\/span> <span class="input-group"> <span class="input-group-addon"> <span class="text-muted glyphicon glyphicon-calendar"><\/span> <\/span> <input type="date" class="form-control" datepicker-popup ng-model="ngNgridEndDate" is-open="datepickerendopen" date-disabled="false" ng-required="true" close-text="Close" datepicker-append-to-body="true" ng-click="datepickerendopen=true" placeholder="To" ng-change="updateDateFilter(c,ngNgridStartDate,ngNgridEndDate)" /> <\/span> <\/li> <li class="ngngrid-dropdown" ng-if="c.ColumnType==\'ngNGridNumber\'" > <span class="input-group" style="padding-bottom:5px" > <span class="input-group-addon"> # <\/span> <input type="number" class="form-control" ng-model="ngNgridStartNumber" ng-required="true" placeholder="From" ng-change="updateNumberFilter(c,ngNgridStartNumber,ngNgridEndNumber,true)" /> <\/span> <span class="input-group"> <span class="input-group-addon"> # <\/span> <input type="number" class="form-control" ng-model="ngNgridEndNumber" ng-required="true" placeholder="To" ng-change="updateNumberFilter(c,ngNgridStartNumber,ngNgridEndNumber,true)" /> <\/span> <\/li> <li  ng-if="c.ColumnType==\'ngNGridDate\' || c.ColumnType==\'ngNGridNumber\'" class="divider"><\/li> <li class="ngngrid-dropdown"> <span class="input-group input-group-sm" style="cursor: pointer" ng-click="toggleColFilters(c);$event.stopPropagation()"> <span class="glyphicon" ng-class="isColFilterApplied(c)?\'glyphicon-check\':\'glyphicon-unchecked\'"><\/span> <span>Select/Unselect All<\/span> <\/span> <\/li> <li class="divider"><\/li> <li class="ngngrid-dropdown" ng-repeat="distinctObj in (c.DropdownFilteredObjects = (distinctLists[getSortProperty(c)] | filter:{DisplayValue:dropDownFilterInput}:false)) | orderBy:false" ng-click="addColumnFilters(c,[distinctObj.DistinctValue]);$event.stopPropagation()" style="cursor: pointer"> <span class="glyphicon" ng-class="isColFiltered(c,distinctObj.DistinctValue)?\'glyphicon-check\':\'glyphicon-unchecked\'"><\/span> <small style="font-weight:normal"> <span ng-class="c.FilterClassFn(distinctObj)" style="margin-right:2px"> {{(distinctObj.DisplayValue != null && distinctObj.DisplayValue.toString() != \'\') ? distinctObj.DisplayValue : \'(Blanks)\'}} <span class="glyphicon" ng-class="c.FilterGlyphFn(distinctObj)"><\/span> <\/span> <span class="text-muted">({{distinctObj.DistinctCount}})<\/span> <\/small> <\/li> <\/ul> <\/div> <\/th> <\/tr> <tr ng-repeat-start="row in (gridFilteredRows =  (rows | orderBy:gridSortColumn:gridSortOrder | filter:canShowRecord)) | ngNgridPageOffset: (gridCurrentPage-1)*gridPageSize  | limitTo:gridPageSize" style="border-bottom: none" ng-class="{\'ngngrid-animaterow\':row.isNgNgridUpdated,\'info\':row.isNgNgridSelected,\'warning\':row.isNgNgridDirty}"> <td ng-if="childColumndefinitions.length > 0"> <span ng-click="row.isNgNgridOpen = !row.isNgNgridOpen" ng-disabled="childRowsCount(row) <= 0" data-toggle="tooltip" title="{{row.isNgNgridOpen?\'Collapse Details\':\'Expand Details\'}}" style="cursor:pointer"> <span class="glyphicon" ng-class="row.isNgNgridOpen?\'glyphicon-minus-sign\':\'glyphicon-plus-sign\'"><\/span> <sub ng-show="showChildrenCount">{{childRowsCount(row)}}<\/sub> <\/span> <\/td> <td ng-show="showRowNumbers">{{$index+1}}<\/td> <td ng-show="showRowSelector" ng-click="row.isNgNgridSelected = !row.isNgNgridSelected" style="cursor:pointer" data-toggle="tooltip" title="Select/Unselect Row"> <span class="glyphicon" ng-class="row.isNgNgridSelected ?  \'glyphicon-check\': \'glyphicon-unchecked\'"><\/span> <\/td> <td ng-repeat="c in columnDefinitions" ng-class="c.CellClassFn(row)" ng-hide="c.isNgNgridColumnHide"> <span ng-show="$index ==0 && row.isNgNgridDirty" class=\'glyphicon glyphicon-edit\'><\/span> <span ng-switch="c.ColumnType">    <label ng-switch-when="ngNGridLabel" class="label {{c.ClassFn(row)}}" data-toggle="tooltip" data-placement="right" title="{{c.TooltipFn(row)}}"> <span class="glyphicon {{c.GlyphFn(row)}}"><\/span> {{c.TextFn ?  c.TextFn(row) :  row[c.Name]}} <span ng-show="c.BadgeFn" class="badge" ng-class="c.BadgeClass">{{c.BadgeFn(row)}}<\/span> <\/label> <button ng-switch-when="ngNGridButton" ng-disabled="c.DisabledFn(row)" class="btn  btn-xs  {{c.ClassFn(row)}}" data-toggle="tooltip" data-placement="right" title="{{c.TooltipFn(row)}}" ng-click="c.ClickFn(row)"> <span class="glyphicon  {{c.GlyphFn(row)}}"><\/span> {{c.TextFn ?  c.TextFn(row) :  row[c.Name]}} <span ng-show="c.BadgeFn" class="badge" ng-class="c.BadgeClass">{{c.BadgeFn(row)}}<\/span> <\/button> <span ng-switch-when="ngNGridDate" ng-class="c.ClassFn ? c.ClassFn(row) : \'\'"> <span class="glyphicon  {{c.GlyphFn(row)}}"><\/span> {{c.TextFn ?  c.TextFn(row) :  row[c.Name]|date:c.DateFormatFn(row)}} <span ng-show="c.BadgeFn" class="badge">{{c.BadgeFn(row)}}<\/span> <\/span> <span ng-switch-when="ngNGridSelect" class="input-group input-group-sm"> <span ng-show="c.ClassFn" class="input-group-addon" ng-class="c.ClassFn(row)"> <span class="glyphicon" ng-class="c.GlyphFn(row)"><\/span> <\/span> <select ng-if="c.SelectValue != null" class="form-control" ng-model="row[c.Name]" ng-options="o[c.SelectValue]  for o in  c.SelectFn(row)  track by o[c.SelectKey]" ng-change="row.isNgNgridDirty=true" required> <option value="">Select<\/option> <\/select> <select ng-if="c.SelectValue == null" class="form-control" ng-model="row[c.Name]" ng-options="o  for o in  c.SelectFn(row)  track by o" ng-change="row.isNgNgridDirty=true" required> <option value="">Select<\/option> <\/select> <\/span> <a ng-switch-when="ngNGridLink" href="{{c.UrlFn(row)}}" target="{{c.TargetFn ? c.TargetFn(row):\'_blank\'}}" ng-class="c.ClassFn(row)"> <span class="glyphicon  {{c.GlyphFn(row)}}"><\/span> {{c.TextFn ?  c.TextFn(row) :  row[c.Name]}} <span ng-show="c.BadgeFn" class="badge" ng-class="c.BadgeClass">{{c.BadgeFn(row)}}<\/span> <\/a> <span ng-switch-when="ngNGridInput" ng-class="c.GlyphFn?\'input-group\':\'\'"> <span ng-show="c.GlyphFn" class="input-group-addon" ng-class="c.ClassFn(row)"> <span class="glyphicon" ng-class="c.GlyphFn(row)"><\/span> <\/span> <input class="form-control" ng-model="row[c.Name]" ng-readonly="c.DisabledFn(row)" ng-change="row.isNgNgridDirty=true" placeholder="{{c.NullOrEmptyFn(row)}}" type="{{c.InputTypeFn(row)}}" /> <\/span> <span ng-switch-default ng-class="c.ClassFn ? c.ClassFn(row) : \'\'"> <span class="glyphicon {{c.GlyphFn(row)}}"><\/span> {{c.TextFn ?  c.TextFn(row) :  row[c.Name]}} <span ng-show="c.BadgeFn" class="badge" ng-class="c.BadgeClass">{{c.BadgeFn(row)}}<\/span> <\/span> <img ng-show="c.ImgFn" ng-class="c.ImgClassFn(row)" src="{{c.ImgFn(row)}}" /> <\/span> <\/td> <\/tr> <tr ng-repeat-end ng-if="row.isNgNgridOpen" ng-class="{\'ngngrid-animaterow\':row.isNgNgridUpdated,\'info\':row.isNgNgridSelected,\'warning\':row.isNgNgridDirty}"> <td><\/td> <td ng-show="showRowNumbers"><\/td> <td ng-show="showRowSelector"><\/td> <td colspan="{{columnDefinitions.length}}"> <table class="table table-condensed table-bordered table-striped" ng-repeat="childColDef in childColumndefinitions"> <tr> <th ng-repeat="childCol in childColDef"> <span ng-click="changeChildSort(childCol)" style="cursor:pointer"> <u> {{childCol.DisplayName}} <\/u> <span ng-show="isChildSorted(childCol)" class="glyphicon" ng-class="gridChildrenSortOrder?\'glyphicon-chevron-down\':\'glyphicon-chevron-up\'"><\/span> <\/span> <\/th> <\/tr> <tr ng-repeat="childRow in getChildRows(row,childPropertynames[$index]) | orderBy:gridChildrenSortColumn:gridChildrenSortOrder" ng-class="{\'ngngrid-animaterow\':childRow.isNgNgridUpdated,\'info\':childRow.isNgNgridSelected,\'warning\':childRow.isNgNgridDirty}"> <td ng-repeat="childCol in childColDef" ng-class="childCol.CellClassFn(childRow)"> <span ng-show="$index ==0 && childRow.isNgNgridDirty" class=\'glyphicon glyphicon-edit\'><\/span> <span ng-switch="childCol.ColumnType"> <label ng-switch-when="ngNGridLabel" class="label label-xs {{childCol.ClassFn(childRow)}}" data-toggle="tooltip" data-placement="right" title="{{childCol.TooltipFn(childRow)}}"> <span class="glyphicon {{childCol.GlyphFn(childRow)}}"><\/span> {{childCol.TextFn ?  childCol.TextFn(childRow) :  childRow[childCol.Name]}} <span ng-show="childCol.BadgeFn" class="badge" ng-class="childCol.BadgeClass">{{childCol.BadgeFn(childRow)}}<\/span> <\/label> <button ng-switch-when="ngNGridButton" ng-disabled="childCol.DisabledFn(childRow)" class="btn  btn-xs  {{childCol.ClassFn(childRow)}}" data-toggle="tooltip" data-placement="right" title="{{childCol.TooltipFn(childRow)}}" ng-click="childCol.ClickFn(childRow)"> <span class="glyphicon  {{childCol.GlyphFn(childRow)}}"><\/span> {{childCol.TextFn ?  childCol.TextFn(childRow) :  childRow[childCol.Name]}} <span ng-show="childCol.BadgeFn" class="badge" ng-class="childCol.BadgeClass">{{childCol.BadgeFn(childRow)}}<\/span> <\/button> <span ng-switch-when="ngNGridDate" ng-class="childCol.ClassFn ? childCol.ClassFn(childRow) : \'\'"> <span class="glyphicon  {{childCol.GlyphFn(childRow)}}"><\/span> {{childCol.TextFn ?  childCol.TextFn(childRow) :  childRow[childCol.Name]|date:childCol.DateFormatFn(childRow)}} <span ng-show="childCol.BadgeFn" class="badge" ng-class="childCol.BadgeClass">{{childCol.BadgeFn(childRow)}}<\/span> <\/span> <span ng-switch-when="ngNGridSelect" class="input-group"> <span ng-show="childCol.ClassFn" class="input-group-addon" ng-class="childCol.ClassFn(row)"> <span class="glyphicon" ng-class="childCol.GlyphFn(row)"><\/span> <\/span> <select ng-if="childCol.SelectValue != null" name="status" ng-disabled="childCol.DisabledFn(childRow)" class="form-control" ng-model="childRow[childCol.Name]" ng-options="o[childCol.SelectValue]  for o in  childCol.SelectFn(childRow)  track by o[childCol.SelectKey]" ng-change="childRow.isNgNgridDirty=true" required> <option value="">Select<\/option> <\/select> <select ng-if="childCol.SelectValue == null" name="status" ng-disabled="childCol.DisabledFn(childRow)" class="form-control" ng-model="childRow[childCol.Name]" ng-options="o  for o in  childCol.SelectFn(childRow)  track by o" ng-change="childRow.isNgNgridDirty=true" required> <option value="">Select<\/option> <\/select> <\/span> <a ng-switch-when="ngNGridLink" href="{{childCol.UrlFn(childRow)}}" target="_blank"> <span class="glyphicon  {{childCol.GlyphFn(childRow)}}"><\/span> {{childCol.TextFn ?  childCol.TextFn(childRow) :  childRow[childCol.Name]}} <span ng-show="childCol.BadgeFn" class="badge" ng-class="childCol.BadgeClass">{{childCol.BadgeFn(childRow)}}<\/span> <\/a> <span ng-switch-when="ngNGridInput" ng-class="childCol.GlyphFn?\'input-group\':\'\'"> <span ng-show="childCol.GlyphFn" class="input-group-addon" ng-class="childCol.ClassFn(row)"> <span class="glyphicon" ng-class="childCol.GlyphFn(row)"><\/span> <\/span> <input class="form-control" ng-model="childRow[childCol.Name]" ng-readonly="childCol.DisabledFn(childRow)" ng-change="childRow.isNgNgridDirty=true" placeholder="{{childCol.NullOrEmptyFn(childRow)}}" type="{{childCol.InputTypeFn(childRow)}}" /> <\/span> <span ng-switch-default ng-class="childCol.ClassFn ? childCol.ClassFn(childRow) : \'\'"> {{childCol.TextFn ?  childCol.TextFn(childRow) :  childRow[childCol.Name]}} <span class="glyphicon {{childCol.GlyphFn(childRow)}}"><\/><\/span> <span ng-show="childCol.BadgeFn" class="badge" ng-class="childCol.BadgeClass">{{childCol.BadgeFn(childRow)}}<\/span> <\/span> <\/span> <\/td> <\/tr> <\/table> <table class="table table-condensed table-bordered table-striped" ng-if="rowFooterdefinitions.length > 0"> <tr ng-repeat="rowFooter in rowFooterdefinitions"> <td ng-repeat="footerItem in rowFooter"> <span ng-switch="footerItem.ColumnType"> <span ng-switch-when="ngNGridButton"> <span class="btn-group"> <button class="btn {{footerItem.ClassFn(row)}}" data-toggle="tooltip" data-placement="right" title="{{footerItem.TooltipFn(row)}}" ng-click="footerItem.ClickFn(row)" ng-disabled="footerItem.DisabledFn(row)"> <span class="glyphicon {{footerItem.GlyphFn(row)}}"><\/span> <span ng-show="footerItem.BadgeFn" class="badge" ng-class="footerItem.BadgeClass">{{footerItem.BadgeFn(row)}}<\/span> {{footerItem.TextFn(row)}} <\/button> <\/span> <\/span> <span ng-switch-when="ngNGridLabel"> <span class="label label-xs {{footerItem.ClassFn(row)}}" data-toggle="tooltip" data-placement="right" title="{{footerItem.TooltipFn(row)}}"> <span class="glyphicon {{footerItem.GlyphFn(row)}}"><\/span> <span ng-show="rowFooter.BadgeFn" class="badge" ng-class="footerItem.BadgeClass">{{footerItem.BadgeFn(row)}}<\/span> {{footerItem.TextFn(row)}} <\/span> <\/span> <span ng-switch-default ng-class="footerItem.ClassFn(row)"> {{footerItem.TextFn(row)}} <\/span> <\/span> <\/td> <\/tr> <\/table> <\/td> <\/tr> <\/table> <progressbar ng-show="rowsLoading" class="active progress-striped" value="100" type="primary"> <b><i>{{rowsLoadingText}}<\/i><\/b> <\/progressbar> <\/div> <\/div>')});